{"version":3,"sources":["app.js","controllers/chatcontroller.js","directives/scroll.js"],"names":[],"mappingsjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"chat.js","sourcesContent":["\r\n\r\nvar app = angular.module('chat',['ngRoute','luegg.directives']);\r\n\r\n    app.config(['$routeProvider', function($routeProvider) {\r\n        try {\r\n            $routeProvider.when('/chat', {\r\n                templateUrl: '/partials/chat.blade.php',\r\n                controller: 'chatcontroller',\r\n            }).\r\n                otherwise({\r\n                    redirectTo: '/'\r\n                });\r\n        }catch(e){\r\n            console.log('catch: ' +e);\r\n        }\r\n        //$routeProvider.interceptors.push(function($q) {\r\n        //    return {\r\n        //        responseError: function(rejection) {\r\n        //            if(rejection.status <= 0) {\r\n        //                window.location = \"chat.blade.php\";\r\n        //                return;\r\n        //            }\r\n        //            return $q.reject(rejection);\r\n        //        }\r\n        //    };\r\n        //});\r\n    }\r\n    ]);\r\n\r\n    app.factory('message',function($http) {\r\n\r\n        return {\r\n            msg : function (value) {\r\n                $http.post('/chat/sendmessage', value).success(function (data) {\r\n                    console.log(data);\r\n                    //socket.emit('join', data);\r\n                })\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n\r\n\r\n    app.factory('socket',function($rootScope){\r\n\r\n        var socket = io.connect(\"http://www.pm.local:3000/\");\r\n\r\n\r\n        return {\r\n            on: function (eventName, callback) {\r\n                socket.on(eventName, function () {\r\n                    var args = arguments;\r\n                    $rootScope.$apply(function () {\r\n                        callback.apply(socket, args);\r\n                    });\r\n                });\r\n\r\n            },\r\n\r\n\r\n            emit: function (eventName, data, callback) {\r\n                socket.emit(eventName, data, function () {\r\n                    var args = arguments;\r\n                    $rootScope.$apply(function () {\r\n                        if (callback) {\r\n                            callback.apply(socket, args);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n});","\r\n\r\n    var app=angular.module('chat');\r\n    app.controller('chatcontroller', function($scope,socket ,message,$http,$timeout, $location,$anchorScroll){\r\n        var jq = $.noConflict();\r\n        $scope.users=[];\r\n        $scope.data=[];\r\n        //$scope.input='';\r\n        //$scope.glued = true;\r\n\r\n\r\n\r\n        //--join char--//\r\n        $scope.joinChat = function(){\r\n            jq('.chat, .chat1').slideDown();\r\n            //jq('.chat1').slideDown();\r\n            jq('.join').hide();\r\n                  $http.get('/chat/join').success(function(data){\r\n                       // console.log(data);\r\n                        socket.emit('join',data);\r\n                  })\r\n        };\r\n\r\n        socket.on('join',function(data){\r\n            $scope.users.push(data);\r\n            $scope.data.push( {\r\n                joined : data.name+' has joined',\r\n            });\r\n            console.log($scope.data);\r\n        });\r\n\r\n        //leave chat--//\r\n        $scope.leaveChat = function(user){\r\n            jq('.chat, .join').slideUp();\r\n            //jq().slideUp();\r\n            console.log(user)\r\n            socket.emit('leave',user+' has left');\r\n\r\n\r\n        };\r\n        socket.on('leave',function(name){\r\n            console.log(name);\r\n            $scope.data.push({joined:name});\r\n            $scope.users.splice(name,1);\r\n            socket.emit('disconnect');\r\n        })\r\n\r\n        socket.on('message',function(data){\r\n           // $scope.$watch(function() { $timeout(scrollIfGlued, 100, false); });\r\n            console.log(JSON.parse(data));\r\n            data=JSON.parse(data);\r\n            $scope.data.push(data);\r\n\r\n        })\r\n\r\n        //--send message==//\r\n        $scope.sendMessage=function(){\r\n            var value=$scope.input;\r\n            var data= message.msg({value:value});\r\n            $scope.input=\"\";\r\n\r\n            console.log(data);\r\n        }\r\n        socket.on('chat',function(data){\r\n            console.log(data);\r\n        })\r\n\r\n\r\n\r\n\r\n      //<--!jquery-->\r\n        //jq('.chat').hide();\r\n        jq('#showchat').on('click',function(){\r\n            jq('.join').slideDown();\r\n        })\r\n        jq('.window').on('click',function(){\r\n            jq('.chat1').slideToggle();\r\n        })\r\n\r\n\r\n    });\r\n","/**\r\n * Created by cube7r on 8/18/2016.\r\n */\r\n\r\n    angular.module('chat').directive('scrollBottom',function($timeout){\r\n\r\n        //qvar j= $.noConflict();\r\n            return{\r\n                scope:{\r\n                    list:'=scrollBottom'\r\n                },\r\n                link:function($scope, $element){\r\n                    $scope.$watchCollection('list',function(newValue){\r\n\r\n                        if(newValue){\r\n                            $timeout(function(){\r\n                                $element.scrollTop($element[0].scrollHeight);\r\n                            }, 0);\r\n\r\n                        }\r\n\r\n                    });\r\n\r\n                }\r\n\r\n            }\r\n        });"],"sourceRoot":"/source/"}